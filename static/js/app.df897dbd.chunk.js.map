{"version":3,"sources":["assets/logo/logo_chaveirohelp_sem_fundo.png","src/components/mainButton.tsx","src/components/pageView.tsx","src/components/generalContainer.tsx","src/globals/pt-br.ts","src/pages/home/index.tsx","src/api/api.service.ts","src/pages/sell/index.tsx","src/pages/index.ts","App.tsx","web-build/register-service-worker.js","assets/companies/DOVALE.png","assets/companies/GOLD.png","assets/companies/JAS.png","assets/companies/JSA.png","assets/companies/LAND.png","assets/companies/SILCA.png"],"names":["module","exports","ButtonContainer","styled","TouchableOpacity","props","height","color","horizontalMargin","ButtonText","Text","fontSize","MainButton","text","onInteract","icon","onPress","name","size","PageContainer","SafeAreaView","PageView","children","CenteredContainer","View","flexSize","direction","width","SimpleContainer","margin","GeneralContainer","simple","ptBr","sell","compare","record","stock","graph","share","exit","type","number","welcome","home","value","navigation","dimensions","useWindowDimensions","toString","Image","source","logo","style","route","navigate","lang","console","log","Platform","OS","a","async","Share","message","result","action","sharedAction","activityType","dismissedAction","alert","dbKey","fetchAllData","AsyncStorage","getItem","data","fetch","response","json","saveAsyncStorage","setItem","JSON","stringify","getDataFromId","id","company","db","parse","results","find","trim","useState","companies","setCompanies","loading","setLoading","mainTextValue","setMainTextValue","cardSize","useEffect","image","require","flex","marginTop","textAlign","flexDirection","flexWrap","justifyContent","alignItems","fontWeight","TextInput","onChangeText","placeholder","backgroundColor","padding","marginLeft","borderRadius","borderWidth","borderColor","ActivityIndicator","map","item","index","key","elevation","searchData","searchId","newCompanies","comp","onClick","resizeMode","findIndex","currentCompanies","onChange","Stack","createStackNavigator","App","NavigationContainer","Navigator","screenOptions","headerShown","headerStyle","Screen","component","Pages","options","title","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch","error"],"mappings":"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","file":"static/js/app.df897dbd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_chaveirohelp_sem_fundo.bbec37f0.png\";","import React from 'react';\nimport { View, StyleSheet, TouchableOpacity, Text } from 'react-native';\nimport styled from 'styled-components/native';\nimport { FontAwesome5 as Icon } from '@expo/vector-icons'\n\ninterface IProps {\n    text: string\n    fontSize?: string\n    color?: string\n    height?: string\n    horizontalMargin?: string\n    onInteract: () => void\n    icon?: iconProperties\n}\ntype iconProperties = {\n    name: any\n    size?: number\n    color?: string\n}\n\nexport const ButtonContainer = styled.TouchableOpacity<IProps>`\n    flex:1;\n    max-height: ${props => (props.height ? props.height : '70px')};\n    background-color: ${props => (props.color ? props.color : '#71C8FE')};\n    border-width: 4px;\n    border-color: #20232a;\n    border-radius: 6px;\n    align-items: center;\n    justify-content:center;\n    flex-direction: row;\n    margin-left :  ${props => (props.horizontalMargin ? props.horizontalMargin : '0px')};\n    margin-right :  ${props => (props.horizontalMargin ? props.horizontalMargin : '0px')};\n\n`;\n\nexport const ButtonText = styled.Text<IProps>`\n    font-size: ${props => (props.fontSize ? props.fontSize : '30px')};\n    margin-left: 10px;\n`;\n\nconst MainButton = ({ text, color, onInteract, fontSize, height, icon, horizontalMargin }: IProps) => {\n    return (\n        <ButtonContainer onPress={onInteract} color={color} height={height} horizontalMargin={horizontalMargin}>\n            {icon && (\n                <Icon name={icon.name} size={icon.size || 30} color={icon.color} />\n            )}\n            <ButtonText fontSize={fontSize}>{text}</ButtonText>\n        </ButtonContainer>\n    )\n}\n\n\nexport default MainButton;","import React from 'react';\nimport styled from 'styled-components/native';\n\nexport const PageContainer = styled.SafeAreaView`\n    flex: 1;\n    align-items: center ;\n    background-color: #f0f0f0\n;\n`;\n\ninterface IProps {\n    children: any\n}\n\nconst PageView = ({ children }: IProps) => {\n    return (\n        <PageContainer>\n            {children}\n        </PageContainer>\n    )\n}\n\n\nexport default PageView;","import React from 'react';\nimport styled from 'styled-components/native';\n\n\ninterface IProps {\n    children: any\n    flexSize?: number\n    direction?: string\n    height?: string\n    width?: string\n    color?: string\n    margin?: string\n    simple?: boolean\n}\n\nexport const CenteredContainer = styled.View<IProps>`\n    flex: ${props => (props.flexSize ? props.flexSize : 1)};\n    flex-direction: ${props => (props.direction ? props.direction : 'column')};\n    align-items: center ;\n    justify-content:center;\n    background-color: ${props => (props.color ? props.color : '#f0f0f0')};\n    height: ${props => (props.height ? props.height : '100%')};\n    width: ${props => (props.width ? props.width : '100%')};\n`;\n\n\nexport const SimpleContainer = styled.View<IProps>`\n    flex: ${props => (props.flexSize ? props.flexSize : 1)};\n    width: ${props => (props.width ? props.width : '100%')};\n    margin: ${props => (props.margin ? props.margin : '1px')};\n    flex-direction:   ${props => (props.direction ? props.direction : 'column')};\n    background-color: ${props => (props.color ? props.color : \"#f0f0f0\")};\n\n`;\n\n\nexport const LogoContainer = styled.View<IProps>`\n    flex: ${props => (props.flexSize ? props.flexSize : 1)};\n    width: ${props => (props.width ? props.width : '100%')};\n    margin: ${props => (props.margin ? props.margin : '1px')};\n    flex-direction:   ${props => (props.direction ? props.direction : 'column')};\n    background-color: ${props => (props.color ? props.color : '#f0f0f0')};\n\n`;\n\nconst GeneralContainer = ({ children, direction, height, width, color, flexSize, simple }: IProps) => {\n    if (!simple) {\n        return (<CenteredContainer flexSize={flexSize} direction={direction}\n            height={height} width={width} color={color} >\n            {children}\n        </CenteredContainer>)\n    } else {\n        return (<SimpleContainer flexSize={flexSize} direction={direction}\n            height={height} width={width} color={color} >\n            {children}\n        </SimpleContainer>\n        )\n    }\n}\n\n\nexport default GeneralContainer;","export const ptBr = {\n    appName: \"Chaveiro app\",\n    buttons: {\n        sell: \"Vender\",\n        compare: \"Comparar\",\n        record: \"Registrar\",\n        stock: \"Estocar\",\n        graph: \"Grafico\",\n        share: \"Compartilhar\",\n        exit: \"Sair\"\n    },\n    messages: {\n        type: \"Digite o numero da chave e em seguida selecione o fabricante\",\n        number: \"N° da Chave\",\n        welcome: \"Bem vindo\"\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { Image, Share, Platform, Text, useWindowDimensions } from 'react-native';\nimport logo from '../../../assets/logo/logo_chaveirohelp_sem_fundo.png'\nimport MainButton from '../../components/mainButton';\nimport PageView from '../../components/pageView';\nimport GeneralContainer from '../../components/generalContainer';\nimport { ptBr as lang } from '../../globals/pt-br'\n\n\n// import { Container } from './styles';\n\nconst home: React.FC = ({ navigation }) => {\n\n    const createWidth = (value: number): string => {\n        return value > 900 ? '900px' : ((value - 50).toString() + 'px')\n    }\n\n    const dimensions = useWindowDimensions();\n\n    const onClick = (route: string):void => {\n        navigation.navigate(route)\n    }\n\n    const onShare = async () => {\n        try {\n            const result = await Share.share({\n                message: 'O melhor aplicativo para você , acesse : https://chaveiroapp.com.br',\n            });\n            if (result.action === Share.sharedAction) {\n                if (result.activityType) {\n                } else {\n                }\n            } else if (result.action === Share.dismissedAction) {\n            }\n        } catch (error) {\n            alert(error.message);\n        }\n    };\n    return (\n        <PageView>\n            <GeneralContainer width={createWidth(dimensions.width)} color={'#f0f0f0'} simple>\n                <GeneralContainer flexSize={1}>\n                    <Image source={logo} style={{ width: 90, height: 166 }} />\n                </GeneralContainer>\n                <GeneralContainer flexSize={2} simple>\n                    <GeneralContainer direction={'row'} flexSize={0.5} simple>\n                        <MainButton onInteract={() => onClick(\"Sell\")}\n                            text={lang.buttons.sell}\n                            height={\"70px\"}\n                            icon={{ size: 30, name: \"shopping-cart\" }}\n                        />\n                    </GeneralContainer>\n                    <GeneralContainer direction={'row'} flexSize={1} simple>\n                        <MainButton onInteract={() => console.log(\"Hello!\")}\n                            text={lang.buttons.compare}\n                            horizontalMargin={'1px'}\n                            fontSize={'18px'}\n                            height={\"150px\"}\n                            icon={{ size: 20, name: \"sync-alt\" }}\n                        />\n                        <MainButton onInteract={() => console.log(\"Hello!\")}\n                            text={lang.buttons.record}\n                            horizontalMargin={'1px'}\n                            fontSize={'18px'}\n                            height={\"150px\"}\n                            icon={{ size: 20, name: \"plus\" }}\n                        />\n                    </GeneralContainer>\n                    <GeneralContainer direction={'row'} flexSize={1} simple>\n                        <MainButton onInteract={() => console.log(\"Hello!\")}\n                            text={lang.buttons.stock}\n                            horizontalMargin={'1px'}\n                            fontSize={'18px'}\n                            height={\"150px\"}\n                            icon={{ size: 20, name: \"tag\" }}\n                        />\n                        <MainButton onInteract={() => console.log(\"Hello!\")}\n                            text={lang.buttons.graph}\n                            horizontalMargin={'1px'}\n                            fontSize={'18px'}\n                            height={\"150px\"}\n                            icon={{ size: 20, name: \"chart-bar\" }}\n                        />\n                    </GeneralContainer>\n                    <GeneralContainer direction={'row'} flexSize={1} simple>\n                        {!(Platform.OS == 'web') && (\n                            <MainButton onInteract={onShare}\n                                text={'Compartilhar'}\n                                horizontalMargin={'1px'}\n                                fontSize={'15px'}\n                                height={\"100px\"}\n                                icon={{ size: 20, name: \"share\" }}\n                            />\n                        )}\n                    </GeneralContainer>\n                </GeneralContainer>\n                <Text>Todos os direitos reservadors Chaveiro app 2021</Text>\n            </GeneralContainer>\n        </PageView>\n    )\n}\nexport default home;","\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { TabBarIOSItem } from 'react-native';\n\nconst baseUrl = \"https://chaveiroapp-server.herokuapp.com/principal\"\nconst dbKey = 'chaveiroapp:database'\n\n\ninterface remoteData {\n    id?: number\n    description?: string\n    gold: string,\n    jas?: string,\n    dovale?: string,\n    silca?: string,\n    jsa?: string,\n    land?: string\n}\n\n\nexport const fetchAllData = async () => {\n    let data = await AsyncStorage.getItem(dbKey)\n    if (!data) {\n        console.log('Making request')\n        const response = await fetch(baseUrl)\n        const data = await response.json()\n        console.log('saving data post request')\n        await saveAsyncStorage(data)\n    }\n    console.log('returning data')\n    return data\n\n}\n\nconst saveAsyncStorage = async (data) => {\n    if (!(await AsyncStorage.getItem(dbKey))) {\n        AsyncStorage.setItem(dbKey, JSON.stringify(data))\n    }\n    console.log('Data base updated')\n}\n\n\nexport const getDataFromId = async (id: string, company: string) => {\n    const data = await AsyncStorage.getItem(dbKey) || ''\n    const db: [] = JSON.parse(data)\n    const results = db.find((data) => data[company] === id.trim())\n    return results\n}\n\nexport const getCompanies = () => {\n    return [\n        { id: '', company: 'dovale', name: 'DOVALE', image: require('../../assets/companies/DOVALE.png') },\n        { id: '', company: 'gold', name: 'GOLD', image: require('../../assets/companies/GOLD.png') },\n        { id: '', company: 'jas', name: 'JAS', image: require('../../assets/companies/JAS.png') },\n        { id: '', company: 'jsa', name: 'JSA', image: require('../../assets/companies/JSA.png') },\n        { id: '', company: 'land', name: 'LAND', image: require('../../assets/companies/LAND.png') },\n        { id: '', company: 'silca', name: 'SILCA', image: require('../../assets/companies/SILCA.png') }\n    ]\n} ","import React, { useState, useEffect } from 'react';\nimport { View, Image, TouchableOpacity, Text, useWindowDimensions, TextInput, ActivityIndicator } from 'react-native';\nimport PageView from '../../components/pageView';\nimport GeneralContainer from '../../components/generalContainer';\nimport { ptBr as lang } from '../../globals/pt-br'\nimport { getCompanies, getDataFromId } from '../../api/api.service'\nimport { ScrollView } from 'react-native-gesture-handler';\n\nconst sell: React.FC = () => {\n\n  const dimensions = useWindowDimensions();\n  const [companies, setCompanies] = useState<any[]>([])\n  const [loading, setLoading] = useState<boolean>(false)\n  const [mainTextValue, setMainTextValue] = useState<string>(\"\")\n  const [error, setError] = useState(false);\n\n  interface IInputs {\n    id: string\n    value: string\n  }\n\n  const createWidth = (value: number): string => {\n    return value > 900 ? '900px' : ((value - 50).toString() + 'px')\n  }\n  const cardSize = (value: number) => {\n    return value < 570 ? 100 : 200\n  }\n\n  useEffect(() => {\n    setCompanies(getCompanies())\n  }, [])\n\n  const onChange = (company: string, value: string): void => {\n    const index = companies.findIndex((data) => {\n      return data.company === company\n    })\n    const currentCompanies = [...companies]\n    if (index >= 0) {\n      currentCompanies[index].id = value\n    }\n    setCompanies(currentCompanies)\n  }\n\n  const onClick = async (company: string) => {\n    setLoading(true)\n\n    const searchData = companies.find((data) => {\n      return data.company === company\n    })\n\n    const searchId = mainTextValue.trim() !== '' ? mainTextValue.trim() : searchData.id\n    const result = await getDataFromId(searchId, searchData.company)\n    console.log(result, '<-return')\n    if (!result) {\n      const newCompanies = companies.map((comp) => {\n        return {\n          ...comp, id: \"\"\n        }\n      })\n      setCompanies(newCompanies)\n      setLoading(false)\n      setLoading(false)\n      return\n\n    }\n    const newCompanies = companies.map((comp) => {\n      return {\n        ...comp, id: result[comp.company]\n      }\n    })\n    setCompanies(newCompanies)\n    setLoading(false)\n  }\n  const getId = (company: string) => {\n    const data = companies.find((data) => {\n      return data.company === company\n    })\n    return data.id\n  }\n  return (\n    <PageView>\n      <GeneralContainer width={createWidth(dimensions.width)} color={'#f0f0f0'} simple>\n        <ScrollView style={{ flex: 5, marginTop: 50 }} >\n          <Text style={{ textAlign: 'center', fontSize: 18 }}>{lang.messages.type}</Text>\n          <View style={{ flexDirection: 'row', flexWrap: 'wrap', margin: 20, justifyContent: 'center', alignItems: 'center' }} >\n            <Text style={{ fontSize: 18, fontWeight: 'bold' }}>{lang.messages.number}</Text>\n            <TextInput value={mainTextValue} onChangeText={(text) => setMainTextValue(text)} placeholder={'123456'} style={{ width: 130, height: 50, backgroundColor: '#fff', padding: 10, fontSize: 18, marginLeft: 10, borderRadius: 8, borderWidth: 3, borderColor: '#71C8FE' }} />\n          </View>\n          <View style={{ flexDirection: 'row', flexWrap: 'wrap', margin: 10, justifyContent: 'center' }} >\n\n            {loading ? (<ActivityIndicator size={\"large\"} color={'#71C8FE'} />) : (\n              companies.map((item, index) => {\n                return (\n                  <View key={index} style={{ justifyContent: 'center', alignItems: 'center', margin: 8, padding: 2, borderRadius: 8, backgroundColor: '#71C8FE', elevation: 2 }}>\n                    <TouchableOpacity onPress={() => onClick(item.company)} style={{ padding: 10 }}>\n                      <Image source={item.image} style={{ width: 100, height: 40, resizeMode: 'stretch' }} />\n                    </TouchableOpacity>\n                    <TextInput value={getId(item.company) || \"\"} onChangeText={(text) => onChange(item.company, text)} style={{ width: cardSize(dimensions.width), height: 40, backgroundColor: '#fff', margin: 10, borderRadius: 8, padding: 5 }} placeholder={'n/a'} />\n                  </View>\n                )\n              })\n            )}\n          </View>\n        </ScrollView>\n      </GeneralContainer>\n      <Text>Todos os direitos reservadors Chaveiro app 2021</Text>\n    </PageView >\n  )\n}\n\nexport default sell;\n","import home from \"./home\"\nimport sell from \"./sell\"\n\nexport default {home,sell}","import React, { EffectCallback, useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Ionicons } from '@expo/vector-icons';\nimport * as Font from 'expo-font';\nimport Pages from './src/pages'\nimport { fetchAllData } from './src/api/api.service';\n\nconst Stack = createStackNavigator();\n\nfunction App() {\n\n  useEffect(() => {\n    (async () => {\n      await fetchAllData()\n    })()\n      ;\n  }, [])\n\n  return (\n    <NavigationContainer>\n      <Stack.Navigator screenOptions={{\n        headerShown: true,\n        headerStyle: { backgroundColor: '#71C8FE' }\n      }}>\n        <Stack.Screen name=\"Home\" component={Pages.home} options={{ title: 'ChaveiroAPP' }} />\n        <Stack.Screen name=\"Sell\" component={Pages.sell} options={{ title: 'ChaveiroAPP' }} />\n\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nexport default App;","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","module.exports = __webpack_public_path__ + \"static/media/DOVALE.d4d8abb1.png\";","module.exports = __webpack_public_path__ + \"static/media/GOLD.ec40409c.png\";","module.exports = __webpack_public_path__ + \"static/media/JAS.56ad7283.png\";","module.exports = __webpack_public_path__ + \"static/media/JSA.074de2d2.png\";","module.exports = __webpack_public_path__ + \"static/media/LAND.2e5d5523.png\";","module.exports = __webpack_public_path__ + \"static/media/SILCA.1bbe4b97.png\";"],"sourceRoot":""}